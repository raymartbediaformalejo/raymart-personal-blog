.new-post {
  --border-color: var(--clr-border);
  --color: var(--clr-primary-100);
  --border-radius: 4px;
  --label-color: hsl(var(--clr-neutral-off-white) / 0.6);
  --clr-active: var(--clr-primary-300);
  --clr-toolbar-icon-hover: var(--clr-primary-500);

  color: var(--color);
}

.title-wrapper {
  border-bottom: 1px solid var(--clr-border);
  border-radius: var(--border-radius) var(--border-radius) 0 0;
  padding: 16px 17.5px;
}

.title {
  font-size: 20px;
  font-weight: var(--fw-600);
}

.new-form__form-wrapper {
  background-color: hsl(var(--clr-neutral-off-white) / 0.1);
  border-radius: var(--border-radius);
  border: 1px solid var(--clr-border);
  overflow: hidden;
  margin: 1.25rem 0;
}

.new-form__form {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1rem;

  padding: 17.5px;

  grid-template-areas:
    "title"
    "summary"
    "rightForm"
    "editor"
    "buttons";
}

/* ============================ START NAMED GRID AREA ========================= */
.input-texfield-item-wrapper.title {
  grid-area: title;
}
.input-texfield-item-wrapper.summary {
  grid-area: summary;
}

.new-form__form--right {
  grid-area: rightForm;
}
.new-form__form--right,
.categories-and-tags-wrapper,
.status-visibility-wrapper,
.featured-and-image-wrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.editor {
  grid-area: editor;
}

.button-wrapper {
  grid-area: buttons;
}
/* ============================ END NAMED GRID AREA ========================= */

.input-texfield-item-wrapper div[class*="MuiInputBase-root"] textarea {
  height: calc(56px * 2);
  color: var(--color);
}
.input-texfield-item-wrapper div[class*="MuiInputBase-root"] fieldset {
  color: var(--color);
  border-color: var(--border-color);
}

.input-texfield-item-wrapper div[class*="MuiInputBase-root"] {
  background: hsl(var(--clr-neutral-body-bg) / 0.2);
}

.input-item-wrapper label,
.input-texfield-item-wrapper label {
  color: var(--label-color);
}

.select-category {
}

.upload-image-button[class*="MuiButtonBase-root"] {
  height: 56px;
  /* display: inline-block; */
  word-break: keep-all;
}

.new-form__form .input-item-wrapper .select-category div:first-child {
  background: hsl(var(--clr-neutral-body-bg) / 0.2);
  color: var(--color);
}

.new-form__form .input-item-wrapper .select-category fieldset {
  color: var(--color);
  border-color: var(--border-color);
}
.new-form__form .input-item-wrapper .select-category svg {
  color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form
  .input-item-wrapper
  .select-category[class*="Mui-focused"]
  fieldset {
  --border-color: var(--clr-primary-500);
}

.new-form__form .input-item-wrapper .select-category[class*="Mui-focused"] svg {
  --color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .input-item-wrapper .select-category:hover fieldset,
.new-form__form
  .input-texfield-item-wrapper
  div[class*="MuiInputBase-root-MuiOutlinedInput-root"]:hover
  fieldset[class*="MuiOutlinedInput-notchedOutline"] {
  --border-color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form
  .input-texfield-item-wrapper
  div[class~="Mui-focused"]
  fieldset {
  border-color: var(--clr-primary-500);
}

.new-form__form
  .input-texfield-item-wrapper
  div:not([class~="Mui-focused"])[class~="MuiInputBase-root"]:hover
  fieldset {
  border-color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .input-item-wrapper .select-category:hover svg {
  --color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .cover-photo-wrapper {
  background-color: hsl(var(--clr-neutral-body-bg) / 0.2);
  border: 1px solid var(--border-color);
  border-style: dashed;
  height: 15rem;
  width: 100%;
  overflow: hidden;
  padding: 10px;
}

.new-form__form .cover-photo-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  user-select: none;
}

.form__checkbox-wrapper[class*="MuiFormControlLabel-root"] {
  color: hsl(var(--clr-neutral-border) / 0.1);
  border: 1px solid var(--border-color);
  width: 100%;
  margin: 0;
  height: 56px;
  border-radius: 4px;
  justify-content: space-between;
  padding-left: 12px;
  text-transform: uppercase;
  background-color: hsl(var(--clr-neutral-body-bg) / 0.2);
}

.form__checkbox-wrapper[class*="MuiFormControlLabel-root"]:hover {
  --border-color: hsl(var(--clr-neutral-border) / 0.2);
}
.form__checkbox-wrapper span:first-child:not([class~="Mui-checked"]) svg {
  color: hsl(var(--clr-neutral-border) / 0.1);
}

.form__checkbox-wrapper span:nth-child(2) {
  color: var(--label-color);
  user-select: none;
}

.form__checkbox-wrapper span:nth-child(2):hover {
  color: var(--color);
}

.button-wrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 1rem;
  justify-content: space-between;
}

.button-wrapper button {
  width: 100%;
}

.editor {
  background-color: hsl(var(--clr-neutral-body-bg) / 0.2);
}

.editor div:first-child[class~="ql-toolbar"],
.editor div:nth-child(2)[class~="ql-container"] {
  border: 1px solid var(--border-color);
}

.editor div:first-child[class~="ql-toolbar"] {
  border-radius: var(--border-radius) var(--border-radius) 0 0;
}
.editor div:nth-child(2)[class~="ql-container"] {
  border-radius: 0 0 var(--border-radius) var(--border-radius);
  height: 800px;
}

/* ===== START QUILL PICKER ===== */

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label"]
  svg
  polygon {
  stroke: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label"]:hover {
  color: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label"]:hover
  svg
  polygon {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label ql-active"] {
  color: var(--clr-active);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  polygon {
  stroke: var(--clr-primary-300);
}

/* ===== END QUILL PICKER ===== */

/* ===== QUILL BOLD ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL BOLD ===== */

/* ===== QUILL ITALIC ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]
  svg
  line {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]:hover
  svg
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic ql-active"]
  svg
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL ITALIC ===== */
/* ===== QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]
  svg
  rect {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover {
  color: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover
  svg
  rect {
  stroke: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"] {
  color: var(--clr-active);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"]
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"]
  svg
  rect {
  stroke: var(--clr-active);
}

/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]
  svg
  path {
  stroke: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"] {
  color: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover {
  color: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"] {
  color: var(--clr-active);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL COLOR ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg
  polyline {
  stroke: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"] {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}

/* ===== END QUILL COLOR ===== */

/* ===== START QUILL BG COLOR ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg:first-child
  g {
  fill: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg:first-child
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg:first-child
  polyline {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg:first-child
  g {
  fill: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg:first-child
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg:first-child
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg:first-child
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-background ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg:first-child
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL BG COLOR ===== */

/* ===== START QUILL LIST ===== */

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-list ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}

/* ===== END QUILL LIST ===== */
/* ===== START QUILL INDENT ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"]
  svg
  polyline {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-indent"]:hover
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}

/* ===== END QUILL INDENT ===== */
/* ===== START QUILL LINK ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-link ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL LINK ===== */
/* ===== START QUILL IMAGE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]
  svg
  circle,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]
  svg
  polyline {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  circle,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  circle,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-image"]:hover
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}
/* ===== END QUILL IMAGE ===== */
/* ===== START QUILL VIDEO ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-video"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-video"]
  svg
  rect {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-video"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-video"]:hover
  svg
  rect {
  stroke: var(--clr-toolbar-icon-hover);
}
/* ===== END QUILL ALIGN ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label"]
  svg
  line {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label"]:hover
  svg
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-align ql-picker ql-icon-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL ALIGN ===== */

/* ===== START QUILL CODE BLOCK ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]
  svg
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]
  svg
  line {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]:hover
  svg
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]:hover
  svg
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block ql-active"]
  svg
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block ql-active"]
  svg
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL CODE BLOCK ===== */

/* ===== START QUILL CODE CLEAN ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean"]
  svg
  line {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean"]:hover
  svg
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-clean ql-active"]
  svg
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL CODE CLEAN ===== */

@media (min-width: 500px) {
  .button-wrapper {
    flex-direction: row;
  }
}
@media (min-width: 600px) {
  .categories-and-tags-wrapper,
  .status-visibility-wrapper,
  .featured-and-image-wrapper {
    flex-direction: row;
  }
  .categories-and-tags-wrapper > div,
  .status-visibility-wrapper > div {
    width: 100%;
  }

  .featured-and-image-wrapper label[class*="MuiButtonBase-root"],
  .featured-and-image-wrapper label[class*="MuiFormControlLabel-root"] {
    width: 50%;
  }
}

@media (min-width: 1000px) {
  .new-form__form {
    grid-template-columns: repeat(3, minmax(0, 1fr));

    grid-template-areas:
      "title title rightForm"
      "summary summary rightForm"
      "summary summary rightForm"
      "editor editor rightForm"
      "editor editor rightForm"
      "editor editor rightForm"
      "editor editor rightForm "
      " buttons buttons .";
  }

  .categories-and-tags-wrapper,
  .status-visibility-wrapper,
  .featured-and-image-wrapper {
    flex-direction: column;
  }
  .featured-and-image-wrapper label[class*="MuiButtonBase-root"],
  .featured-and-image-wrapper label[class*="MuiFormControlLabel-root"] {
    width: 100%;
  }
}
