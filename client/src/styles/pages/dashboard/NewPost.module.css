.new-post {
  --border-color: var(--clr-border);
  --color: var(--clr-primary-100);
  --border-radius: 4px;
  --label-color: hsl(var(--clr-neutral-off-white) / 0.6);
  --clr-active: var(--clr-primary-300);
  --clr-toolbar-icon-hover: var(--clr-primary-500);

  color: var(--color);
}

.title-wrapper {
  border-bottom: 1px solid var(--clr-border);
  border-radius: var(--border-radius) var(--border-radius) 0 0;
  padding: 16px 17.5px;
}

.title {
  font-size: 20px;
  font-weight: var(--fw-600);
}

.new-form__form-wrapper {
  background-color: hsl(var(--clr-neutral-border) / 0.05);
  border-radius: var(--border-radius);
  border: 1px solid var(--clr-border);
  overflow: hidden;
  margin: 1.25rem 0;
}

.new-form__form {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  padding: 17.5px;
}

.input-texfield-item-wrapper div[class*="MuiInputBase-root"] input {
  color: var(--color);
}
.input-texfield-item-wrapper div[class*="MuiInputBase-root"] fieldset {
  color: var(--color);
  border-color: var(--border-color);
}

.input-texfield-item-wrapper div[class*="MuiInputBase-root"] input {
  background: hsl(var(--clr-neutral-body-bg) / 0.2);
}

.input-item-wrapper label,
.input-texfield-item-wrapper label {
  color: var(--label-color);
}

.select-category {
}

.new-form__form .input-item-wrapper .select-category div:first-child {
  background: hsl(var(--clr-neutral-body-bg) / 0.2);
  color: var(--color);
}

.new-form__form .input-item-wrapper .select-category fieldset {
  color: var(--color);
  border-color: var(--border-color);
}
.new-form__form .input-item-wrapper .select-category svg {
  color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form
  .input-item-wrapper
  .select-category[class*="Mui-focused"]
  fieldset {
  --border-color: var(--clr-primary-500);
}

.new-form__form .input-item-wrapper .select-category[class*="Mui-focused"] svg {
  --color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .input-item-wrapper .select-category:hover fieldset,
.new-form__form
  .input-texfield-item-wrapper
  div[class*="MuiInputBase-root-MuiOutlinedInput-root"]:hover
  fieldset[class*="MuiOutlinedInput-notchedOutline"] {
  --border-color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form
  .input-texfield-item-wrapper
  div[class~="Mui-focused"]
  fieldset {
  border-color: var(--clr-primary-500);
}

.new-form__form
  .input-texfield-item-wrapper
  div:not([class~="Mui-focused"])[class~="MuiInputBase-root"]:hover
  fieldset {
  border-color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .input-item-wrapper .select-category:hover svg {
  --color: hsl(var(--clr-neutral-border) / 0.2);
}

.new-form__form .cover-photo-wrapper {
  background-color: hsl(var(--clr-neutral-body-bg) / 0.2);
  border: 1px solid var(--border-color);
  border-style: dashed;
  height: 15rem;
  width: 100%;
  overflow: hidden;
  padding: 10px;
}

.new-form__form .cover-photo-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.form__checkbox-wrapper span:first-child:not([class~="Mui-checked"]) svg {
  color: hsl(var(--clr-neutral-border) / 0.1);
}

.form__checkbox-wrapper span:nth-child(2) {
  color: var(--label-color);
}

.form__checkbox-wrapper span:nth-child(2):hover {
  color: var(--color);
}

.editor {
  background-color: hsl(var(--clr-neutral-body-bg) / 0.2);
}

.editor div:first-child[class~="ql-toolbar"],
.editor div:nth-child(2)[class~="ql-container"] {
  border: 1px solid var(--border-color);
}

.editor div:first-child[class~="ql-toolbar"] {
  border-radius: var(--border-radius) var(--border-radius) 0 0;
}
.editor div:nth-child(2)[class~="ql-container"] {
  border-radius: 0 0 var(--border-radius) var(--border-radius);
}

.editor div:nth-child(2)[class~="ql-container"] div[class~="ql-editor"] {
  resize: vertical;
  height: 100%;
  min-height: 100%;
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  span[class="ql-picker-label"]:hover {
  color: var(--clr-primary-300);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]
  svg
  polygon {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-picker"]:hover
  svg
  polygon {
  stroke: var(--clr-primary-300);
}

/* .editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[type="button"]
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[type="button"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[type="button"]
  svg
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[type="button"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-color"]
  span[class="ql-picker-label"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-color"]
  span[class="ql-picker-label"]
  svg
  polyline,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-background"]
  span[class="ql-picker-label"]
  span
  polygon,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-background"]
  span[class="ql-picker-label"]
  span
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class~="ql-align"]
  span[class="ql-picker-label"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-code-block"]
  svg
  polyline {
  stroke: var(--label-color);
} */

/* ===== QUILL BOLD ===== */

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-bold ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL BOLD ===== */

/* ===== QUILL ITALIC ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]
  svg
  line {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic"]:hover
  svg
  line {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-italic ql-active"]
  svg
  line {
  stroke: var(--clr-active);
}
/* ===== END QUILL ITALIC ===== */
/* ===== QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]
  svg
  rect {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover {
  color: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline"]:hover
  svg
  rect {
  stroke: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"] {
  color: var(--clr-active);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"]
  svg
  path,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-underline ql-active"]
  svg
  rect {
  stroke: var(--clr-active);
}

/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]
  svg
  path {
  stroke: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"] {
  color: var(--clr-active);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-strike ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL UNDERLINE ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"] {
  color: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]
  svg
  path {
  stroke: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover {
  color: var(--clr-toolbar-icon-hover);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote"]:hover
  svg
  path {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"] {
  color: var(--clr-active);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"]
  svg
  rect,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  button[class="ql-blockquote ql-active"]
  svg
  path {
  stroke: var(--clr-active);
}
/* ===== END QUILL UNDERLINE ===== */

/* ===== START QUILL COLOR ===== */
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"] {
  color: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]
  svg
  polyline {
  stroke: var(--label-color);
}

.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label"]:hover
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"] {
  color: var(--clr-toolbar-icon-hover);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  line,
.editor
  div:first-child[class~="ql-toolbar"]
  span[class="ql-formats"]
  span[class="ql-color ql-picker ql-color-picker"]
  span[class="ql-picker-label ql-active"]
  svg
  polyline {
  stroke: var(--clr-toolbar-icon-hover);
}

/* ===== END QUILL COLOR ===== */

.editor
  div:first-child[class~="ql-toolbar"]
  span[class~="ql-background"]
  span[class="ql-picker-label"]
  svg:first-child
  g {
  fill: var(--label-color);
}
.editor
  div:first-child[class~="ql-toolbar"]
  span[class~="ql-background"]
  span[class="ql-picker-label"]:hover
  svg:first-child
  g {
  fill: var(--clr-primary-300);
}

/* =====END QUILL BACKGROUND COLOR ===== */

/* .editor line,
.editor path,
.editor polygon,
.editor svg,
.editor rect,
.editor polyline {
  stroke: var(--label-color);
}

.editor line,
.editor path,
.editor polygon,
.editor svg,
.editor rect,
.editor polyline {
  stroke: var(--label-color);
} */
